# Build stage
FROM node:22.15.0-alpine as builder

WORKDIR /app

# Install dependencies first (for better caching)
COPY package.json package-lock.json ./
COPY nx.json .
COPY tsconfig*.json ./
COPY eslint.config.mjs .
# Copy all configuration files
COPY .eslintrc* ./
COPY .prettierrc* ./

RUN npm ci --legacy-peer-deps

# Copy all source code and configuration files
COPY apps ./apps
COPY libs ./libs
COPY modules ./modules

ENV NODE_ENV=production
RUN npx nx build host-ui --configuration=production
RUN npx nx build point_frontend --configuration=production

# Production stage
FROM nginx:alpine

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built artifacts
COPY --from=builder /app/apps/host-ui/dist /usr/share/nginx/html/host
COPY --from=builder /app/modules/point/frontend/dist /usr/share/nginx/html/point

EXPOSE 4200

CMD ["nginx", "-g", "daemon off;"]